stages:
  - build
  - package

rust-build:
  stage: build
  image: rust:1.70
  script:
    - rustup target add armv7-unknown-linux-gnueabihf
    - rustup target add aarch64-unknown-linux-gnu
    - make build-pi4-armv7 profile=release
    - make build-pi4-arm64 profile=release
    - ls -la target/armv7-unknown-linux-gnueabihf/release/
    - ls -la target/aarch64-unknown-linux-gnu/release/
  artifacts:
    paths:
      - 'target/armv7-unknown-linux-gnueabihf/release/simbiota'
      - 'target/armv7-unknown-linux-gnueabihf/release/simbiotactl'
      - 'target/aarch64-unknown-linux-gnu/release/simbiota'
      - 'target/aarch64-unknown-linux-gnu/release/simbiotactl'
    expire_in: 1 minute

  before_script:
    # install ssh-agent
    - 'apt-get update -y && apt-get install gcc-arm-linux-gnueabihf gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu -y'
    - 'which ssh-agent || ( apt-get install openssh-client -y )'
    # run ssh-agent
    - eval $(ssh-agent -s)
    # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
    # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

package-deb:
  stage: package
  image: alpine:latest
  dependencies:
    - rust-build
  before_script:
    - apk add --no-cache curl dpkg fakeroot make git
  script:
    - make package-nodep profile=release
  artifacts:
    paths:
      - package/*.deb
    expire_in: 1 day
